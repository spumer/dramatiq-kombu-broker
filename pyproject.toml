[build-system]  # https://python-poetry.org/docs/pyproject/#poetry-and-pep-517
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]  # https://python-poetry.org/docs/pyproject/
name = "dramatiq-kombu-broker"
version = "0.1.0"
description = "Dramatiq Kombu-based broker"
authors = ["spumer <spumer-tm@yandex.ru> <spumer-tm@yandex.ru>"]
readme = "README.md"
repository = "https://github.com/spumer/dramatiq-kombu-broker"

[tool.commitizen]  # https://commitizen-tools.github.io/commitizen/config/
bump_message = "bump(release): v$current_version â†’ v$new_version"
tag_format = "v$version"
update_changelog_on_bump = true
version_provider = "poetry"

[tool.poetry.dependencies]  # https://python-poetry.org/docs/dependency-specification/
python = ">=3.9,<4.0"
kombu-pyamqp-threadsafe = ">=0.3.0"
dramatiq = "^1.17.0"
typing-extensions = { version= "^4.12.1", python = "<3.10"}

[tool.poetry.group.test.dependencies]  # https://python-poetry.org/docs/master/managing-dependencies/
commitizen = ">=3.21.3"
coverage = { extras = ["toml"], version = ">=7.4.4" }
mypy = ">=1.9.0"
poethepoet = ">=0.25.0"
pre-commit = ">=3.7.0"
pytest = ">=8.1.1"
pytest-mock = ">=3.14.0"
pytest-xdist = ">=3.5.0"
ruff = ">=0.3.5"

[tool.poetry.group.dev.dependencies]  # https://python-poetry.org/docs/master/managing-dependencies/
cruft = ">=2.15.0"
ipykernel = ">=6.29.4"
ipywidgets = ">=8.1.2"
pdoc = ">=14.4.0"

[tool.coverage.report]  # https://coverage.readthedocs.io/en/latest/config.html#report
precision = 1
show_missing = true
skip_covered = true

[tool.coverage.run]  # https://coverage.readthedocs.io/en/latest/config.html#run
branch = true
command_line = "--module pytest"
data_file = "reports/.coverage"
source = ["dramatiq_kombu_broker"]

[tool.coverage.xml]  # https://coverage.readthedocs.io/en/latest/config.html#xml
output = "reports/coverage.xml"

[tool.mypy]  # https://mypy.readthedocs.io/en/latest/config_file.html
junit_xml = "reports/mypy.xml"
python_version = "3.9"
ignore_missing_imports = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
warn_unreachable = true

[tool.pytest.ini_options]  # https://docs.pytest.org/en/latest/reference/reference.html#ini-options-ref
addopts = "-s -vv --color=yes --doctest-modules --exitfirst --failed-first"
testpaths = ["dramatiq_kombu_broker", "tests"]
xfail_strict = true
log_cli = true
log_cli_level = 'INFO'
log_cli_format = '%(asctime)s [%(levelname)-7s] [%(threadName)s] %(name)s: %(message)s'


[tool.ruff]  # https://github.com/charliermarsh/ruff
fix = true
line-length = 100
src = ["dramatiq_kombu_broker", "tests"]
target-version = "py39"

[tool.ruff.lint]
ignore-init-module-imports = true
select = ["A", "ASYNC", "B", "C4", "C90", "D", "DTZ", "E", "F", "FLY", "FURB", "I", "ISC", "LOG", "N", "NPY", "PERF", "PGH", "PIE", "PL", "PT", "Q", "RET", "RUF", "RSE", "SIM", "TID", "UP", "W", "YTT"]
ignore = ["D203", "D213", "E501", "PGH002", "PGH003", "RET504", "S101", "S307"]
unfixable = ["F401", "F841"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "parents"

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.poe.tasks]  # https://github.com/nat-n/poethepoet

  [tool.poe.tasks.docs]
  help = "Generate this package's docs"
  cmd = """
    pdoc
      --docformat $docformat
      --output-directory $outputdirectory
      dramatiq_kombu_broker
    """

    [[tool.poe.tasks.docs.args]]
    help = "The docstring style (default: numpy)"
    name = "docformat"
    options = ["--docformat"]
    default = "numpy"

    [[tool.poe.tasks.docs.args]]
    help = "The output directory (default: docs)"
    name = "outputdirectory"
    options = ["--output-directory"]
    default = "docs"

  [tool.poe.tasks.lint]
  help = "Lint this package"

    [[tool.poe.tasks.lint.sequence]]
    cmd = """
      pre-commit run
        --all-files
        --color always
      """

  [tool.poe.tasks.test]
  help = "Test this package"

    [[tool.poe.tasks.test.sequence]]
    cmd = "coverage run"

    [[tool.poe.tasks.test.sequence]]
    cmd = "coverage report"

    [[tool.poe.tasks.test.sequence]]
    cmd = "coverage xml"

  [tool.poe.tasks.fmt]
  help = "Code formatting"

    [[tool.poe.tasks.fmt.sequence]]
    cmd = """
      ruff check
      --force-exclude
      --extend-fixable=F401,F841
      --fix-only
    """

    [[tool.poe.tasks.fmt.sequence]]
    cmd = "ruff format"
